uI : 사용자와 피사용자간의 대면부분

ux : 사용자가 어떤 시스템,제품, 서비스 등의 여러 상황을 직, 간접적으로 이용하면서 느끼고 생각되는 총체적 경험

ui/ux 
사용자들이 접하는 ui에서 상황 별 경험을 분석하여 편리하고 효율적인 방법을 찾아내는 과정 및 결과 

와이어프레임 
화면에 표시될 내용을 간단히 요약하여 보여주는것 ( 색상, 폰트, 이미지 등을 생략한 뼈대 중심의 결과물)

프로토타입
결과물의 미완성 버전이지만 중요한기능이 대부분 포함되어있는 초기모델 

UI테스트 도구 
정적(수동) 테스트 : 좁은 범위에 대해 많은 인력과 시간을 소비하는 테스트 방법
동적(자동) 테스트 : 넓은 범위에 대해 소수의 인원과 적은 시간을 소비하는 테스트 방법 

파일럿 테스트 
최신 기술을 개발하여 실제 상황에 적용하기 전에 소규모 시험 동작을 해보는 테스트 

Selenium 셀레늄 
UI테스트 도구로 각종 브라우저에 대한 자동화 테스트를 지원하는 라이브러리 

Id : driver.findElement(By.id(“아이디”));

Class : driver.findElement(By.className(“클래스”));
         driver.findElements(By.className(“클래스”));
Tag : driver.findElement(By.tagName(“태그”));
       driver.findElements(By.tagName(“태그”));
Name : driver.findElement(By.name(“name”));
           driver.findElements(By.name(“name”));
CSS Selector : driver.findElement(By.cssSelector(“css선택자”));
                    driver.findElements(By.cssSelector(“css선택자”));
xPath : driver.findElement(By.xpath(“xpath”));


Selenium에서 요소를 복수로 받아왔을 때 주의사항
태그명, 클래스명, name 속성 등으로 요소를 얻어올 경우
List를 이용해 요소를 선별하여 원하는 요소가 몇 번 인덱스 요소인지 확인하는 코드가 필요

List<WebElement> btns = driver.findElements(By.className("link_login"));
향상된 for문을 이용하여 얻어온 모든 요소에 작성된 내용 얻어오기
for(WebElement btn : btns) {
			System.out.println(btn.getText());
		}
if(btns.size()==1) {
			btns.get(0).click();
		}



 Selenium 테스트 중 focus를 옮기는 방법
1) 다른 iframe으로 focus 이동
    해당 iframe의 이름을 확인하여 switchTo( ).frame( ) 메서드 호출
    driver.switchTo().frame(“iframe명”);

부모 프레임으로 focus 이동
    iframe으로 focus가 이동된 상태에서 switchTo.parentFrame( ) 메서드 호출
    driver.switchTo().parentFrame();

 alert 창으로 focus 이동 및 확인 버튼 클릭
    driver.switchTo().alert().accept();

 명시적 대기
조금 더 상세하게 특정 요소가 특정 상태가 되는 것을 감지할 때까지 대기하는 명령

묵시적(암묵적) 대기
웹 드라이버가 발생시키는 예외들에 대하여 일정 시간 동안 재시도하면서 대기하는 명령

